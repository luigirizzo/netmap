diff --git a/e1000/e1000_main.c b/e1000/e1000_main.c
index bcd192ca47b0..1e1a6b61ece4 100644
--- a/e1000/e1000_main.c
+++ b/e1000/e1000_main.c
@@ -190,6 +190,10 @@ static struct pci_error_handlers e1000_err_handler = {
 	.resume = e1000_io_resume,
 };
 
+#if defined(CONFIG_NETMAP) || defined(CONFIG_NETMAP_MODULE)
+#include <if_e1000_netmap.h>
+#endif
+
 static struct pci_driver e1000_driver = {
 	.name     = e1000_driver_name,
 	.id_table = e1000_pci_tbl,
@@ -375,6 +379,10 @@ static void e1000_configure(struct e1000_adapter *adapter)
 	e1000_configure_tx(adapter);
 	e1000_setup_rctl(adapter);
 	e1000_configure_rx(adapter);
+#ifdef DEV_NETMAP
+	if (e1000_netmap_init_buffers(adapter))
+		return;
+#endif /* DEV_NETMAP */
 	/* call E1000_DESC_UNUSED which always leaves
 	 * at least 1 descriptor unused to make sure
 	 * next_to_use != next_to_clean */
@@ -1035,6 +1043,10 @@ static int __devinit e1000_probe(struct pci_dev *pdev,
 	adapter->wol = adapter->eeprom_wol;
 	device_set_wakeup_enable(&adapter->pdev->dev, adapter->wol);
 
+#ifdef DEV_NETMAP
+	e1000_netmap_attach(adapter);
+#endif /* DEV_NETMAP */
+
 	/* print bus type/speed/width info */
 	DPRINTK(PROBE, INFO, "(PCI%s:%s:%s) ",
 		((hw->bus_type == e1000_bus_type_pcix) ? "-X" : ""),
@@ -1113,6 +1125,10 @@ static void __devexit e1000_remove(struct pci_dev *pdev)
 
 	kfree(adapter->tx_ring);
 	kfree(adapter->rx_ring);
+	
+#ifdef DEV_NETMAP
+	netmap_detach(netdev);
+#endif /* DEV_NETMAP */
 
 	iounmap(hw->hw_addr);
 	if (hw->flash_address)
@@ -3429,6 +3445,10 @@ static bool e1000_clean_tx_irq(struct e1000_adapter *adapter,
 	unsigned int count = 0;
 	unsigned int total_tx_bytes=0, total_tx_packets=0;
 
+#ifdef DEV_NETMAP
+	if (netmap_tx_irq(netdev, 0) != NM_IRQ_PASS)
+		return 1; /* cleaned ok */
+#endif /* DEV_NETMAP */
 	i = tx_ring->next_to_clean;
 	eop = tx_ring->buffer_info[i].next_to_watch;
 	eop_desc = E1000_TX_DESC(*tx_ring, eop);
@@ -3614,6 +3634,15 @@ static bool e1000_clean_jumbo_rx_irq(struct e1000_adapter *adapter,
 	bool cleaned = false;
 	unsigned int total_rx_bytes=0, total_rx_packets=0;
 
+#ifdef DEV_NETMAP
+       int nm_irq = netmap_rx_irq(netdev, 0, work_done);
+       if (nm_irq != NM_IRQ_PASS) {
+               if (nm_irq == NM_IRQ_RESCHED) {
+                       *work_done = work_to_do;
+               }
+               return 1;
+       }
+#endif /* DEV_NETMAP */
 	i = rx_ring->next_to_clean;
 	rx_desc = E1000_RX_DESC(*rx_ring, i);
 	buffer_info = &rx_ring->buffer_info[i];
@@ -3795,6 +3824,15 @@ static bool e1000_clean_rx_irq(struct e1000_adapter *adapter,
 	bool cleaned = false;
 	unsigned int total_rx_bytes=0, total_rx_packets=0;
 
+#ifdef DEV_NETMAP
+       int nm_irq = netmap_rx_irq(netdev, 0, work_done);
+       if (nm_irq != NM_IRQ_PASS) {
+               if (nm_irq == NM_IRQ_RESCHED) {
+                       *work_done = work_to_do;
+               }
+               return 1;
+       }
+#endif /* DEV_NETMAP */
 	i = rx_ring->next_to_clean;
 	rx_desc = E1000_RX_DESC(*rx_ring, i);
 	buffer_info = &rx_ring->buffer_info[i];
